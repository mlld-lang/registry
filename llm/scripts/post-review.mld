---
description: Post GitHub review based on LLM recommendation
mlld-version: ">=1.3.0"
---

# Post Review Comment

@import { PR_NUMBER, REPO_OWNER, REPO_NAME, LLM_RECOMMENDATION, LLM_REVIEW_BODY } from @input

## Set Default Values

@exec setDefault(value, defaultValue) = @run js [(
  return value || defaultValue;
)]

@text recommendation = @setDefault(@LLM_RECOMMENDATION, "COMMENT")
@text reviewBody = @setDefault(@LLM_REVIEW_BODY, "Review failed to generate")
@exec buildRepo(owner, name) = @run js [(
  return owner + "/" + name;
)]
@text repoPath = @buildRepo(@REPO_OWNER, @REPO_NAME)

## Debug Output

@text debugMessage = [[Posting review for PR #{{PR_NUMBER}} with recommendation: {{recommendation}}]]
@add @debugMessage

## Post Review Based on Recommendation

>> Use exec to create review commands
@exec postApproval(pr, repo, body) = @run [(
  gh pr review $pr --repo $repo --approve --body "$body"
)]

@exec postChanges(pr, repo, body) = @run [(
  gh pr review $pr --repo $repo --request-changes --body "$body"
)]

@exec postComment(pr, repo, body) = @run [(
  gh pr comment $pr --repo $repo --body "$body"
)]

@when @recommendation: [
  "APPROVE" => @run @postApproval(@PR_NUMBER, @repoPath, @reviewBody)
  "REQUEST_CHANGES" => @run @postChanges(@PR_NUMBER, @repoPath, @reviewBody)
  "COMMENT" => @run @postComment(@PR_NUMBER, @repoPath, @reviewBody)
]

## Summary

@add "âœ… Review posted successfully"