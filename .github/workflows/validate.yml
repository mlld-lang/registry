name: Validate Registry

on:
  pull_request:
    paths:
      - 'modules.json'
      - 'modules/**/*.json'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Build combined registry
      run: |
        cd registry
        node tools/build-registry.js
        
    - name: Validate modules
      run: |
        cd registry
        node tools/validate.js --save-report
        
    - name: Upload validation report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: registry/validation-report.json
        
    - name: Comment on PR
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('registry/validation-report.json', 'utf8'));
          
          let comment = '## ❌ Registry Validation Failed\n\n';
          comment += `- Total modules: ${report.modules}\n`;
          comment += `- Valid: ${report.valid}\n`;
          comment += `- Invalid: ${report.invalid}\n`;
          comment += `- Total errors: ${report.totalErrors}\n\n`;
          
          if (report.invalid > 0) {
            comment += '### Errors by module:\n\n';
            for (const [moduleId, result] of Object.entries(report.results)) {
              if (!result.valid) {
                comment += `**${moduleId}**:\n`;
                result.errors.forEach(err => {
                  comment += `- ${err}\n`;
                });
                comment += '\n';
              }
            }
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Comment success on PR
      if: success() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## ✅ Registry Validation Passed\n\nAll modules are valid and ready to merge!'
          });