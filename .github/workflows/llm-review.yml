name: LLM PR Review

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'modules/**/*.json'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  llm-review:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for diff
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Check allowlist
      id: check-allowlist
      run: |
        PR_AUTHOR="${{ github.event.pull_request.user.login }}"
        echo "Checking if $PR_AUTHOR is in allowlist..."
        
        if [ -f "allowlist.json" ]; then
          IS_TRUSTED=$(node -e "
            const allowlist = require('./allowlist.json');
            const isTrusted = allowlist.trustedAuthors.includes('$PR_AUTHOR');
            console.log(isTrusted);
          ")
          
          if [ "$IS_TRUSTED" = "true" ]; then
            echo "‚úÖ $PR_AUTHOR is a trusted author"
            echo "trusted=true" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è $PR_AUTHOR is not in allowlist, will proceed with LLM review"
            echo "trusted=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "‚ÑπÔ∏è No allowlist found, will proceed with LLM review"
          echo "trusted=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Auto-approve trusted authors
      if: steps.check-allowlist.outputs.trusted == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            event: 'APPROVE',
            body: 'ü§ñ **mlld Registry Bot**\n\n‚úÖ **Decision: AUTO-APPROVED**\n\n**Reason**: Author is on the trusted authors allowlist.\n\n---\n*Trusted authors can publish modules without LLM review to save on API costs.*'
          });
          
          console.log('‚úÖ Auto-approved PR from trusted author');
          
    - name: Install mlld and Claude CLI
      if: steps.check-allowlist.outputs.trusted == 'false'
      run: |
        npm install -g mlld@1.0.0-rc-3
        npm install -g @anthropic-ai/claude-code
        
    - name: Build combined registry
      if: steps.check-allowlist.outputs.trusted == 'false'
      run: |
        node tools/build-registry.js
        
    - name: Generate PR review using mlld
      if: steps.check-allowlist.outputs.trusted == 'false'
      run: |
        # Debug: Check if variables are set
        echo "PR_NUMBER=${{ github.event.number }}"
        echo "ANTHROPIC_API_KEY exists: ${{ secrets.ANTHROPIC_API_KEY != '' }}"
        echo "ANTHROPIC_API_KEY length: ${#ANTHROPIC_API_KEY}"
        
        # First run debug script
        echo "=== Running debug script ==="
        PR_NUMBER="${{ github.event.number }}" \
        REPO_OWNER="${{ github.repository_owner }}" \
        REPO_NAME="${{ github.event.repository.name }}" \
        PR_TITLE="${{ github.event.pull_request.title }}" \
        PR_AUTHOR="${{ github.event.pull_request.user.login }}" \
        ANTHROPIC_API_KEY="${{ secrets.ANTHROPIC_API_KEY }}" \
        GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
        mlld --stdout tools/llm-review-debug.mld
        
        echo "=== Running actual review ==="
        # Pass environment variables directly to mlld
        PR_NUMBER="${{ github.event.number }}" \
        REPO_OWNER="${{ github.repository_owner }}" \
        REPO_NAME="${{ github.event.repository.name }}" \
        PR_TITLE="${{ github.event.pull_request.title }}" \
        PR_AUTHOR="${{ github.event.pull_request.user.login }}" \
        ANTHROPIC_API_KEY="${{ secrets.ANTHROPIC_API_KEY }}" \
        GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
        mlld --stdout tools/llm-review-claude-cli.mld
        
    - name: Auto-approve if recommended
      if: steps.check-allowlist.outputs.trusted == 'false' && env.LLM_RECOMMENDATION == 'APPROVE'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            event: 'APPROVE',
            body: 'ü§ñ **mlld Registry Bot**\n\n‚úÖ **Decision: APPROVED**\n\n' + process.env.LLM_REVIEW_REASONING + '\n\n---\n*I am an automated reviewer powered by Claude AI. I help maintain quality standards for the mlld module registry.*'
          });
          
    - name: Request changes if issues found
      if: steps.check-allowlist.outputs.trusted == 'false' && env.LLM_RECOMMENDATION == 'REQUEST_CHANGES'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            event: 'REQUEST_CHANGES',
            body: 'ü§ñ **mlld Registry Bot**\n\n‚ùå **Decision: CHANGES REQUESTED**\n\n' + process.env.LLM_REVIEW_REASONING + '\n\n---\n*I am an automated reviewer powered by Claude AI. I help maintain quality standards for the mlld module registry.*'
          });
          
    - name: Comment with review
      if: steps.check-allowlist.outputs.trusted == 'false' && env.LLM_RECOMMENDATION == 'COMMENT'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: 'ü§ñ **mlld Registry Bot**\n\nüí¨ **Decision: COMMENT**\n\n' + process.env.LLM_REVIEW_REASONING + '\n\n---\n*I am an automated reviewer powered by Claude AI. I help maintain quality standards for the mlld module registry.*'
          });